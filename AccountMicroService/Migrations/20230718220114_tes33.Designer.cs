// <auto-generated />
using System;
using AccountMicroService.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountMicroService.Migrations
{
    [DbContext(typeof(AccountDbContext))]
    [Migration("20230718220114_tes33")]
    partial class tes33
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccountMicroService.Model.Accmovement", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Accountcode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTCODE_");

                    b.Property<string>("Accountnature")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ACCOUNTNATURE_");

                    b.Property<string>("Accountnumber")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ACCOUNTNUMBER_");

                    b.Property<long>("Accountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ACCOUNTPK_");

                    b.Property<decimal?>("Affranchissement")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("AFFRANCHISSEMENT_");

                    b.Property<decimal>("Amount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("AMOUNT_");

                    b.Property<decimal?>("Amountacccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("AMOUNTACCCUR_");

                    b.Property<DateTime?>("Basisvaluedate")
                        .HasColumnType("DATE")
                        .HasColumnName("BASISVALUEDATE_");

                    b.Property<string>("Bpnature")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("BPNATURE_");

                    b.Property<string>("Branchenumber")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("BRANCHENUMBER_");

                    b.Property<DateTime>("Businessdate")
                        .HasColumnType("DATE")
                        .HasColumnName("BUSINESSDATE_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<string>("Chequenumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CHEQUENUMBER_");

                    b.Property<string>("Clientreference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CLIENTREFERENCE_");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("COMMISSION_");

                    b.Property<string>("Countrybp")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COUNTRYBP_");

                    b.Property<decimal?>("Creditmnt")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("CREDITMNT_");

                    b.Property<string>("Currencycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CURRENCYCODE_");

                    b.Property<string>("Currencynature")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CURRENCYNATURE_");

                    b.Property<long>("Currencypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CURRENCYPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<DateTime?>("Datedeclaration")
                        .HasColumnType("DATE")
                        .HasColumnName("DATEDECLARATION_");

                    b.Property<decimal?>("Debitmnt")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEBITMNT_");

                    b.Property<long?>("Delay")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("DELAY_");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("DESCRIPTION_");

                    b.Property<string>("Emetteur")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMETTEUR_");

                    b.Property<string>("Feetypecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FEETYPECODE_");

                    b.Property<long?>("Feetypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("FEETYPEPK_");

                    b.Property<string>("Finoperationcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FINOPERATIONCODE_");

                    b.Property<long?>("Finoperationpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("FINOPERATIONPK_");

                    b.Property<decimal?>("Fiscalretention")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FISCALRETENTION_");

                    b.Property<decimal?>("Fracccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FRACCCUR_");

                    b.Property<decimal?>("Frmaincur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FRMAINCUR_");

                    b.Property<decimal?>("Fxrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXRATE_");

                    b.Property<decimal>("Grossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNT_");

                    b.Property<decimal>("Grossamountacccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNTACCCUR_");

                    b.Property<decimal?>("Grossamountmaincur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNTMAINCUR_");

                    b.Property<bool>("Includedinmvtcomm")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("INCLUDEDINMVTCOMM_");

                    b.Property<string>("Intermediaryauthorized")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("INTERMEDIARYAUTHORIZED_");

                    b.Property<string>("Internalvaldatedelay")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("INTERNALVALDATEDELAY_");

                    b.Property<bool?>("Isagios")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISAGIOS_");

                    b.Property<bool?>("Iscommission")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISCOMMISSION_");

                    b.Property<bool?>("Isprinted")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISPRINTED_");

                    b.Property<bool>("Isreversed")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISREVERSED_");

                    b.Property<bool>("Isreversing")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISREVERSING_");

                    b.Property<string>("Loanreference")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LOANREFERENCE_");

                    b.Property<bool?>("Locked")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("LOCKED_");

                    b.Property<string>("Lockreference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LOCKREFERENCE_");

                    b.Property<decimal?>("Montantdeclaration")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("MONTANTDECLARATION_");

                    b.Property<string>("Nametowards")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NAMETOWARDS_");

                    b.Property<string>("Nationaliteemetteur")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NATIONALITEEMETTEUR_");

                    b.Property<int?>("Naturedocument")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("NATUREDOCUMENT_");

                    b.Property<string>("Newoperationcode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("NEWOPERATIONCODE_");

                    b.Property<string>("Numdeclaration")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUMDECLARATION_");

                    b.Property<string>("Numpasseport")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUMPASSEPORT_");

                    b.Property<string>("Opecodeident")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("OPECODEIDENT_");

                    b.Property<DateTime?>("Opedateident")
                        .HasColumnType("DATE")
                        .HasColumnName("OPEDATEIDENT_");

                    b.Property<string>("Openumident")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("OPENUMIDENT_");

                    b.Property<string>("Operationdetailbp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OPERATIONDETAILBP_");

                    b.Property<string>("Operationmotif")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OPERATIONMOTIF_");

                    b.Property<string>("Operationnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OPERATIONNUMBER_");

                    b.Property<string>("Operationtypecode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OPERATIONTYPECODE_");

                    b.Property<long>("Operationtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OPERATIONTYPEPK_");

                    b.Property<string>("Operef")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OPEREF_");

                    b.Property<long?>("Orderinsert")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ORDERINSERT_");

                    b.Property<DateTime?>("Receivedvaluedate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEIVEDVALUEDATE_");

                    b.Property<string>("Reliquat")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RELIQUAT_");

                    b.Property<decimal?>("Reservedamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("RESERVEDAMOUNT_");

                    b.Property<long?>("Reversedpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("REVERSEDPK_");

                    b.Property<string>("Ribtowards")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RIBTOWARDS_");

                    b.Property<string>("Sbereference")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("SBEREFERENCE_");

                    b.Property<bool?>("Senddealroom")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("SENDDEALROOM_");

                    b.Property<string>("Sign")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("SIGN_");

                    b.Property<decimal?>("Totalstamp")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALSTAMP_");

                    b.Property<decimal?>("Totaltaf")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALTAF_");

                    b.Property<DateTime?>("Tradedate")
                        .HasColumnType("DATE")
                        .HasColumnName("TRADEDATE_");

                    b.Property<DateTime?>("Treasurydate")
                        .HasColumnType("DATE")
                        .HasColumnName("TREASURYDATE_");

                    b.Property<string>("Typemvt")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("TYPEMVT_");

                    b.Property<string>("Typevaluedate")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("TYPEVALUEDATE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Unitcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UNITCODE_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<DateTime?>("Valuedate")
                        .HasColumnType("DATE")
                        .HasColumnName("VALUEDATE_");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("VAT_");

                    b.Property<decimal?>("Vatacccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("VATACCCUR_");

                    b.Property<decimal?>("Vatmaincur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("VATMAINCUR_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.HasKey("Pk")
                        .HasName("P_ACCMOVEMENT");

                    b.HasIndex(new[] { "Currencypk" }, "ACCMOVEMENT_CURRENCY");

                    b.HasIndex(new[] { "Accountpk", "Sign", "Typemvt", "Tradedate" }, "ACCMOVEMENT_IDX_99340002");

                    b.HasIndex(new[] { "Reversedpk" }, "ACCM_IDX_REVERSEDPK");

                    b.HasIndex(new[] { "Accountpk", "Typemvt", "Receivedvaluedate" }, "IDX_ACCMOVEMENT_TUN_001");

                    b.HasIndex(new[] { "Typemvt", "Operationtypecode", "Operationtypepk", "Operationdetailbp", "Tradedate", "Accountpk" }, "IDX_ACCMVT_10_03_2020");

                    b.HasIndex(new[] { "Accountpk", "Typemvt", "Isprinted" }, "IDX_ACCMVT_20190715");

                    b.HasIndex(new[] { "Operationtypecode" }, "IDX_ACCMVT_OPERATIONTYPE");

                    b.HasIndex(new[] { "Tradedate", "Receivedvaluedate" }, "INDX_ACCMOVEMENT_002");

                    b.HasIndex(new[] { "Tradedate", "Delay", "Sign", "Operationtypepk" }, "INDX_ACCMOVEMENT_003");

                    b.HasIndex(new[] { "Accountpk", "Tradedate", "Typemvt" }, "INDX_SETTLEMENT_001");

                    b.HasIndex(new[] { "Valuedate" }, "INDX_VALUEDATE");

                    b.HasIndex(new[] { "Finoperationpk" }, "IX_ACCMOVEMEN24813");

                    b.HasIndex(new[] { "Accountcode" }, "IX_ACCMOVEMENT_ACCOUNTCODE");

                    b.HasIndex(new[] { "Accountnumber", "Tradedate" }, "I_NUMCOMPTE_TRADEDATE");

                    b.ToTable("ACCMOVEMENT", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Account", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Accountnumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTNUMBER_");

                    b.Property<DateTime?>("Activationdate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACTIVATIONDATE_");

                    b.Property<bool>("Active")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE_");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BANKCODE_");

                    b.Property<long?>("Bankpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("BANKPK_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE_");

                    b.Property<string>("Currencycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CURRENCYCODE_");

                    b.Property<long>("Currencypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CURRENCYPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<string>("Fullname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FULLNAME_");

                    b.Property<string>("Iban")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("varchar(34)")
                        .HasColumnName("IBAN_");

                    b.Property<bool>("Isinternalrib")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISINTERNALRIB_");

                    b.Property<string>("Ownership")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("OWNERSHIP_");

                    b.Property<string>("Productcategorycode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PRODUCTCATEGORYCODE_");

                    b.Property<string>("Productcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PRODUCTCODE_");

                    b.Property<string>("Rib")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("RIB_");

                    b.Property<string>("Signaturetype")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("SIGNATURETYPE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Unitcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UNITCODE_");

                    b.Property<long?>("Unitpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("UNITPK_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.HasKey("Pk")
                        .HasName("P_ACCOUNT");

                    b.HasIndex(new[] { "Productcode", "Pk" }, "IDX_PRODUCTCODE");

                    b.HasIndex(new[] { "Accountnumber" }, "IX_ACCOUNTNUMBER");

                    b.HasIndex(new[] { "Unitcode" }, "IX_ACCOUNTUNIT9835");

                    b.HasIndex(new[] { "Unitpk" }, "IX_ACCOUNTUNITPK2");

                    b.HasIndex(new[] { "Code" }, "U_ACCOUNTCODE_")
                        .IsUnique();

                    b.HasIndex(new[] { "Rib" }, "U_ACCOUNTRIB_")
                        .IsUnique();

                    b.ToTable("ACCOUNT", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Accountbalance", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Accountcode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTCODE_");

                    b.Property<long>("Accountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ACCOUNTPK_");

                    b.Property<decimal>("Balance")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("BALANCE_");

                    b.Property<string>("Balancetype")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("BALANCETYPE_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<decimal?>("Creditmvt")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("CREDITMVT_");

                    b.Property<string>("Currencycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CURRENCYCODE_");

                    b.Property<long>("Currencypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CURRENCYPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<decimal?>("Debitmvt")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEBITMVT_");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("DATE")
                        .HasColumnName("ENDDATE_");

                    b.Property<decimal?>("Lockamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("LOCKAMOUNT_");

                    b.Property<decimal?>("Overdraftamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("OVERDRAFTAMOUNT_");

                    b.Property<DateTime>("Positiondate")
                        .HasColumnType("DATE")
                        .HasColumnName("POSITIONDATE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.HasKey("Pk")
                        .HasName("P_ACCOUNTBALANCE");

                    b.HasIndex(new[] { "Cdate" }, "ACCBALANCE_CDATE");

                    b.HasIndex(new[] { "Accountcode", "Balancetype", "Enddate" }, "ACCBAL_IDX_9C7F0001");

                    b.HasIndex(new[] { "Positiondate" }, "ACCBAL_PDATE");

                    b.HasIndex(new[] { "Accountcode", "Positiondate" }, "ACCOUNTBALANCE_IDX_99340001");

                    b.HasIndex(new[] { "Currencycode", "Balancetype", "Enddate" }, "IDX$$_CB840001");

                    b.HasIndex(new[] { "Accountpk" }, "IDX_ACCBALANCE_ACCOUNTPK");

                    b.HasIndex(new[] { "Currencypk" }, "IDX_ACCBALANCE_CURRENCYPK");

                    b.HasIndex(new[] { "Accountpk", "Positiondate" }, "INDEX_BALANCE_STBNET");

                    b.HasIndex(new[] { "Udate" }, "INDEX_BALANCE_UDATE");

                    b.HasIndex(new[] { "Accountcode", "Enddate", "Positiondate", "Balancetype" }, "INDX_BALANCE_001");

                    b.ToTable("ACCOUNTBALANCE", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Accountcontract", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Accountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTCODE_");

                    b.Property<bool?>("Accountmig")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ACCOUNTMIG_");

                    b.Property<string>("Accountnumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ACCOUNTNUMBER_");

                    b.Property<long?>("Accountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ACCOUNTPK_");

                    b.Property<string>("Addinfo1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDINFO1_");

                    b.Property<string>("Addinfo2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDINFO2_");

                    b.Property<string>("Addinfo3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDINFO3_");

                    b.Property<string>("Addinfo4")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDINFO4_");

                    b.Property<DateTime?>("Addinfo5")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDINFO5_");

                    b.Property<string>("Addinfo6")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ADDINFO6_");

                    b.Property<string>("Addinfo7")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDINFO7_");

                    b.Property<string>("Categorie")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CATEGORIE_");

                    b.Property<long?>("Clientpouvoirpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTPOUVOIRPK_");

                    b.Property<DateTime?>("Closingdate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLOSINGDATE_");

                    b.Property<string>("Codebp")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CODEBP_");

                    b.Property<string>("Comissionaccountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COMISSIONACCOUNTCODE_");

                    b.Property<long?>("Comissionaccountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("COMISSIONACCOUNTPK_");

                    b.Property<bool?>("Confiscated")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("CONFISCATED_");

                    b.Property<string>("Countrybpcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COUNTRYBPCODE_");

                    b.Property<long?>("Countrybppk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("COUNTRYBPPK_");

                    b.Property<string>("Creationaccountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CREATIONACCOUNTCODE_");

                    b.Property<long?>("Creationaccountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CREATIONACCOUNTPK_");

                    b.Property<DateTime?>("Dateentrypackage")
                        .HasColumnType("DATE")
                        .HasColumnName("DATEENTRYPACKAGE_");

                    b.Property<string>("Davepackagecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DAVEPACKAGECODE_");

                    b.Property<long?>("Davepackagepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("DAVEPACKAGEPK_");

                    b.Property<bool?>("Electionpresidentielle")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ELECTIONPRESIDENTIELLE_");

                    b.Property<string>("Firstname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FIRSTNAME_");

                    b.Property<bool?>("Freezecredit")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FREEZECREDIT_");

                    b.Property<bool?>("Freezedebit")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FREEZEDEBIT_");

                    b.Property<bool?>("Freezeregulatory")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FREEZEREGULATORY_");

                    b.Property<bool?>("Frozen")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FROZEN_");

                    b.Property<DateTime?>("Frozendate")
                        .HasColumnType("DATE")
                        .HasColumnName("FROZENDATE_");

                    b.Property<bool?>("Generateafbreleve")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GENERATEAFBRELEVE_");

                    b.Property<bool?>("Generatereleve")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GENERATERELEVE_");

                    b.Property<bool?>("Generatesettlreport")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GENERATESETTLREPORT_");

                    b.Property<bool?>("Generateswiftreleve")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GENERATESWIFTRELEVE_");

                    b.Property<bool?>("Inactivecredit")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("INACTIVECREDIT_");

                    b.Property<bool?>("Inactivedebit")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("INACTIVEDEBIT_");

                    b.Property<long>("Inactivityperiodpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("INACTIVITYPERIODPK_");

                    b.Property<string>("Lastname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LASTNAME_");

                    b.Property<string>("Linckedaccountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LINCKEDACCOUNTCODE_");

                    b.Property<long?>("Linckedaccountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("LINCKEDACCOUNTPK_");

                    b.Property<string>("Linkedaccountpackage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LINKEDACCOUNTPACKAGE_");

                    b.Property<bool>("Locked")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("LOCKED_");

                    b.Property<bool?>("Maxima")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("MAXIMA_");

                    b.Property<string>("Numcpt7")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUMCPT7_");

                    b.Property<string>("Objectrelationcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OBJECTRELATIONCODE_");

                    b.Property<long?>("Objectrelationpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OBJECTRELATIONPK_");

                    b.Property<string>("Origincreation")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ORIGINCREATION_");

                    b.Property<string>("Otherobjectrelation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OTHEROBJECTRELATION_");

                    b.Property<string>("Pendingaccountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PENDINGACCOUNTCODE_");

                    b.Property<long?>("Pendingaccountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PENDINGACCOUNTPK_");

                    b.Property<string>("Settlementaccountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SETTLEMENTACCOUNTCODE_");

                    b.Property<long?>("Settlementaccountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("SETTLEMENTACCOUNTPK_");

                    b.Property<string>("Smoothingprincipalcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SMOOTHINGPRINCIPALCODE_");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("STATUS_");

                    b.Property<string>("Swiftreleveaddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SWIFTRELEVEADDRESS_");

                    b.Property<string>("Swiftrelevesequence")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SWIFTRELEVESEQUENCE_");

                    b.Property<string>("Swiftrelevetype")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SWIFTRELEVETYPE_");

                    b.Property<string>("Technicalaccountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TECHNICALACCOUNTCODE_");

                    b.Property<long?>("Technicalaccountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("TECHNICALACCOUNTPK_");

                    b.Property<DateTime?>("Transitiondate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("TRANSITIONDATE_");

                    b.Property<long?>("Validationprocesspk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("VALIDATIONPROCESSPK_");

                    b.HasKey("Pk")
                        .HasName("P_ACCOUNTCONTRACT");

                    b.HasIndex("Comissionaccountpk");

                    b.HasIndex("Linckedaccountpk");

                    b.HasIndex("Pendingaccountpk");

                    b.HasIndex("Technicalaccountpk");

                    b.HasIndex(new[] { "Status", "Pk" }, "ACCOUNTCONTRACT_STATUS");

                    b.HasIndex(new[] { "Status", "Accountcode" }, "IDX_ACC_20200329");

                    b.HasIndex(new[] { "Accountcode" }, "I_ACCOUNTCODE");

                    b.HasIndex(new[] { "Categorie" }, "I_CATEGORIE");

                    b.HasIndex(new[] { "Generatereleve" }, "I_GENRELEVE");

                    b.HasIndex(new[] { "Generatesettlreport" }, "I_GENSETTREPORT");

                    b.HasIndex(new[] { "Numcpt7" }, "I_NUMCPT7");

                    b.HasIndex(new[] { "Accountnumber" }, "U_ACCOUNTCON26HOBS")
                        .IsUnique();

                    b.HasIndex(new[] { "Inactivityperiodpk" }, "U_ACCOUNTCO_23L58W")
                        .IsUnique();

                    b.HasIndex(new[] { "Accountpk" }, "U_ACCOUNTCO_3XFOQY")
                        .IsUnique()
                        .HasFilter("[ACCOUNTPK_] IS NOT NULL");

                    b.HasIndex(new[] { "Validationprocesspk" }, "U_ACCOUNTCO_XGAGB7")
                        .IsUnique()
                        .HasFilter("[VALIDATIONPROCESSPK_] IS NOT NULL");

                    b.ToTable("ACCOUNTCONTRACT", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Entity", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<bool?>("Assaini")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ASSAINI_");

                    b.Property<bool?>("Bl")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("BL_");

                    b.Property<string>("Branch")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BRANCH_");

                    b.Property<long?>("Ccppk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CCPPK_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<string>("Centralbankcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CENTRALBANKCODE_");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE_");

                    b.Property<long?>("Crepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CREPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<DateTime?>("Datefield1")
                        .HasColumnType("DATE")
                        .HasColumnName("DATEFIELD1_");

                    b.Property<DateTime?>("Datefield2")
                        .HasColumnType("DATE")
                        .HasColumnName("DATEFIELD2_");

                    b.Property<DateTime?>("Datefield3")
                        .HasColumnType("DATE")
                        .HasColumnName("DATEFIELD3_");

                    b.Property<bool?>("Decbctrisk")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("DECBCTRISK_");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DESCRIPTION_");

                    b.Property<bool?>("Draft")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("DRAFT_");

                    b.Property<string>("Entitycategorycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ENTITYCATEGORYCODE_");

                    b.Property<long>("Entitycategorypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ENTITYCATEGORYPK_");

                    b.Property<string>("Fiscalresidencecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FISCALRESIDENCECODE_");

                    b.Property<long?>("Fiscalresidencepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("FISCALRESIDENCEPK_");

                    b.Property<bool?>("Forbiddenaccount")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FORBIDDENACCOUNT_");

                    b.Property<string>("Fullname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FULLNAME_");

                    b.Property<bool?>("Gc")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GC_");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("IDENTIFIER_");

                    b.Property<string>("Identifier2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IDENTIFIER2_");

                    b.Property<string>("Inscode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("INSCODE_");

                    b.Property<bool?>("Isarchived")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISARCHIVED_");

                    b.Property<bool?>("Isvalidated")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISVALIDATED_");

                    b.Property<string>("Labft")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("LABFT_");

                    b.Property<string>("Migstate")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MIGSTATE_");

                    b.Property<string>("Nationalitycode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NATIONALITYCODE_");

                    b.Property<long?>("Nationalitypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("NATIONALITYPK_");

                    b.Property<bool?>("Notresident")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("NOTRESIDENT_");

                    b.Property<long?>("Officialmailpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OFFICIALMAILPK_");

                    b.Property<string>("Otherfunctionsppe")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OTHERFUNCTIONSPPE_");

                    b.Property<bool?>("Ppe")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PPE_");

                    b.Property<long?>("Ppefunctionpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PPEFUNCTIONPK_");

                    b.Property<long?>("Professionalactivitypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PROFESSIONALACTIVITYPK_");

                    b.Property<bool?>("Prospect")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PROSPECT_");

                    b.Property<string>("Residencecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESIDENCECODE_");

                    b.Property<long?>("Residencepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("RESIDENCEPK_");

                    b.Property<bool?>("Resident")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("RESIDENT_");

                    b.Property<string>("Riskcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RISKCODE_");

                    b.Property<string>("Riskcodebc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RISKCODEBC_");

                    b.Property<DateTime?>("Socialaffiliationdate")
                        .HasColumnType("DATE")
                        .HasColumnName("SOCIALAFFILIATIONDATE_");

                    b.Property<string>("Socialaffiliationnum")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SOCIALAFFILIATIONNUM_");

                    b.Property<string>("Soundex")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SOUNDEX_");

                    b.Property<string>("Stringfield1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("STRINGFIELD1_");

                    b.Property<string>("Stringfield2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("STRINGFIELD2_");

                    b.Property<string>("Stringfield3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("STRINGFIELD3_");

                    b.Property<string>("Stringfield4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("STRINGFIELD4_");

                    b.Property<string>("Stringfield5")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("STRINGFIELD5_");

                    b.Property<string>("Stringfield6")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("STRINGFIELD6_");

                    b.Property<string>("Stringfield7")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("STRINGFIELD7_");

                    b.Property<string>("Translatedname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TRANSLATEDNAME_");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TYPE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<bool?>("Validatedbyjurdical")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("VALIDATEDBYJURDICAL_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.Property<bool?>("Withanomaly")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("WITHANOMALY_");

                    b.HasKey("Pk")
                        .HasName("P_ENTITY");

                    b.HasIndex(new[] { "Nationalitycode", "Pk" }, "IDX$$_87830003");

                    b.HasIndex(new[] { "Nationalitypk", "Pk" }, "IDX$$_87830004");

                    b.HasIndex(new[] { "Type", "Identifier" }, "IDX_ENTITY_TYPID");

                    b.HasIndex(new[] { "Soundex" }, "INDX_ENTITY_001");

                    b.HasIndex(new[] { "Type" }, "INDX_TYPE");

                    b.HasIndex(new[] { "Officialmailpk" }, "IX_OFFICIALMAILPK_");

                    b.HasIndex(new[] { "Centralbankcode" }, "I_MEGARA_CENTRALBANKCODE_");

                    b.HasIndex(new[] { "Fullname" }, "I_MEGARA_FULLNAME_");

                    b.HasIndex(new[] { "Code" }, "U_ENTITYCODE_")
                        .IsUnique();

                    b.HasIndex(new[] { "Identifier" }, "U_ENTITYIDEN8CMT5F")
                        .IsUnique();

                    b.HasIndex(new[] { "Professionalactivitypk" }, "U_ENTITYPRO_P0W29H")
                        .IsUnique()
                        .HasFilter("[PROFESSIONALACTIVITYPK_] IS NOT NULL");

                    b.ToTable("ENTITY", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Financialo", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Abstractopetype")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ABSTRACTOPETYPE_");

                    b.Property<string>("Accountcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTCODE_");

                    b.Property<string>("Accountnumber")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ACCOUNTNUMBER_");

                    b.Property<long?>("Accountpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ACCOUNTPK_");

                    b.Property<bool?>("Cannegoce")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("CANNEGOCE_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<bool>("Closed")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("CLOSED_");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE_");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COMMENT_");

                    b.Property<decimal?>("Creditamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("CREDITAMOUNT_");

                    b.Property<string>("Currencycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CURRENCYCODE_");

                    b.Property<long>("Currencypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CURRENCYPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<decimal?>("Debitamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEBITAMOUNT_");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DESCRIPTION_");

                    b.Property<bool?>("Differed")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("DIFFERED_");

                    b.Property<string>("Differedcondition")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DIFFEREDCONDITION_");

                    b.Property<string>("Exempttype")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EXEMPTTYPE_");

                    b.Property<string>("Extreference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EXTREFERENCE_");

                    b.Property<bool?>("Filtrereport")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FILTREREPORT_");

                    b.Property<bool?>("Force")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FORCE_");

                    b.Property<DateTime?>("Forcedate")
                        .HasColumnType("DATE")
                        .HasColumnName("FORCEDATE_");

                    b.Property<string>("Forceuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FORCEUSER_");

                    b.Property<decimal?>("Fxrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXRATE_");

                    b.Property<string>("Globalreference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GLOBALREFERENCE_");

                    b.Property<decimal>("Grossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNT_");

                    b.Property<decimal?>("Grossamountacccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNTACCCUR_");

                    b.Property<string>("Lockoperationreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LOCKOPERATIONREFERENCE_");

                    b.Property<decimal>("Netamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("NETAMOUNT_");

                    b.Property<decimal?>("Netamountacccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("NETAMOUNTACCCUR_");

                    b.Property<string>("Opeinfo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("OPEINFO_");

                    b.Property<string>("Operationtypecode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OPERATIONTYPECODE_");

                    b.Property<long>("Operationtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OPERATIONTYPEPK_");

                    b.Property<string>("Paymentmeanref")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PAYMENTMEANREF_");

                    b.Property<bool?>("Processed")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PROCESSED_");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("REFERENCE_");

                    b.Property<string>("Relatedoperation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RELATEDOPERATION_");

                    b.Property<string>("Reservationreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESERVATIONREFERENCE_");

                    b.Property<bool?>("Reversed")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("REVERSED_");

                    b.Property<string>("Reversedfinancialopecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REVERSEDFINANCIALOPECODE_");

                    b.Property<long?>("Reversedfinancialopepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("REVERSEDFINANCIALOPEPK_");

                    b.Property<string>("Sign")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("SIGN_");

                    b.Property<decimal?>("Totalcomission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALCOMISSION_");

                    b.Property<decimal?>("Totalcomissionacccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALCOMISSIONACCCUR_");

                    b.Property<decimal?>("Totalfiscalretention")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALFISCALRETENTION_");

                    b.Property<decimal?>("Totalfracccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALFRACCCUR_");

                    b.Property<decimal?>("Totalstamp")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALSTAMP_");

                    b.Property<decimal?>("Totaltaf")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALTAF_");

                    b.Property<decimal?>("Totalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALVAT_");

                    b.Property<decimal?>("Totalvatacccur")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALVATACCCUR_");

                    b.Property<DateTime>("Tradedate")
                        .HasColumnType("DATE")
                        .HasColumnName("TRADEDATE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Unitcode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UNITCODE_");

                    b.Property<long>("Unitpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("UNITPK_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.HasKey("Pk")
                        .HasName("P_FINANCIALO");

                    b.HasIndex(new[] { "Accountcode", "Tradedate" }, "FINANCIALO_ACCCODE");

                    b.HasIndex(new[] { "Accountpk" }, "FINANCIALO_IDX_ACCOUNTPK_");

                    b.HasIndex(new[] { "Currencypk" }, "IDX_CURRENCYPK_");

                    b.HasIndex(new[] { "Processed", "Unitcode", "Reference", "Accountpk" }, "IDX_FINO_20200904");

                    b.HasIndex(new[] { "Processed", "Grossamount", "Tradedate", "Accountpk" }, "IDX_FINO_20201211");

                    b.HasIndex(new[] { "Operationtypecode", "Relatedoperation" }, "IDX_FINO_OPETYP_RELOPE");

                    b.HasIndex(new[] { "Operationtypepk" }, "IDX_OPERATIONTYPEPK_");

                    b.HasIndex(new[] { "Unitpk" }, "IDX_UNITPK_");

                    b.HasIndex(new[] { "Relatedoperation", "Cuser" }, "INDEX6");

                    b.HasIndex(new[] { "Tradedate", "Unitcode", "Cuser", "Reversed", "Processed" }, "IX_25012018_01");

                    b.HasIndex(new[] { "Tradedate", "Operationtypecode", "Unitcode" }, "IX_29012018_02");

                    b.HasIndex(new[] { "Code" }, "IX_CODE_");

                    b.HasIndex(new[] { "Accountnumber", "Tradedate" }, "IX_FINANCIALO_0001");

                    b.HasIndex(new[] { "Lockoperationreference", "Accountpk" }, "IX_FINANCIALO_INDEX1");

                    b.HasIndex(new[] { "Reservationreference", "Accountpk" }, "IX_FINANCIALO_INDEX2");

                    b.HasIndex(new[] { "Lockoperationreference", "Reversed", "Reversedfinancialopepk" }, "I_FINANCIALO");

                    b.HasIndex(new[] { "Code" }, "U_FINANCIALOCODE_")
                        .IsUnique();

                    b.HasIndex(new[] { "Reference" }, "U_FINANCIALOGT2CD6")
                        .IsUnique();

                    b.HasIndex(new[] { "Reversedfinancialopepk" }, "U_FINANCIALO_Y9TGF")
                        .IsUnique()
                        .HasFilter("[REVERSEDFINANCIALOPEPK_] IS NOT NULL");

                    b.ToTable("FINANCIALO", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Productservice", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Abreviation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ABREVIATION_");

                    b.Property<DateTime>("Activationdate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACTIVATIONDATE_");

                    b.Property<bool?>("Applyfiscalretention")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("APPLYFISCALRETENTION_");

                    b.Property<bool>("Available")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("AVAILABLE_");

                    b.Property<string>("Cbcategorycode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CBCATEGORYCODE_");

                    b.Property<long?>("Cbcategorypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CBCATEGORYPK_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<string>("Description")
                        .HasMaxLength(1280)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1280)")
                        .HasColumnName("DESCRIPTION_");

                    b.Property<bool>("Draft")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("DRAFT_");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("DATE")
                        .HasColumnName("ENDDATE_");

                    b.Property<bool?>("Expired")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("EXPIRED_");

                    b.Property<long?>("Ficheproductpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("FICHEPRODUCTPK_");

                    b.Property<string>("Freetext")
                        .HasMaxLength(1280)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1280)")
                        .HasColumnName("FREETEXT_");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IDENTIFIER_");

                    b.Property<bool?>("Internal")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("INTERNAL_");

                    b.Property<string>("Internalcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("INTERNALCODE_");

                    b.Property<bool?>("Isathorizedoperationempty")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISATHORIZEDOPERATIONEMPTY_");

                    b.Property<bool?>("Islimiteempty")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISLIMITEEMPTY_");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME_");

                    b.Property<bool?>("Offeredonce")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("OFFEREDONCE_");

                    b.Property<string>("Prefixan")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("PREFIXAN_");

                    b.Property<string>("Productcategorycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PRODUCTCATEGORYCODE_");

                    b.Property<long>("Productcategorypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PRODUCTCATEGORYPK_");

                    b.Property<long?>("Renewablerequestdelay")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("RENEWABLEREQUESTDELAY_");

                    b.Property<string>("Revisionperiodicity")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("REVISIONPERIODICITY_");

                    b.Property<string>("Risklevel")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("RISKLEVEL_");

                    b.Property<string>("Serial")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SERIAL_");

                    b.Property<string>("Shortname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SHORTNAME_");

                    b.Property<string>("Translatedname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TRANSLATEDNAME_");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TYPE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<string>("Validationprocessname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONPROCESSNAME_");

                    b.Property<string>("Validationstepname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONSTEPNAME_");

                    b.Property<long?>("Vendorincentivespk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("VENDORINCENTIVESPK_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.Property<double?>("Weightingrate")
                        .HasColumnType("FLOAT")
                        .HasColumnName("WEIGHTINGRATE_");

                    b.HasKey("Pk")
                        .HasName("P_PRODUCTSERVICE");

                    b.HasIndex(new[] { "Productcategorycode" }, "IDX$$_001");

                    b.HasIndex(new[] { "Type" }, "IDX$$_99640001");

                    b.HasIndex(new[] { "Name", "Type" }, "IDX$$_99640003");

                    b.HasIndex(new[] { "Code", "Name" }, "IDX$$_CB840002");

                    b.HasIndex(new[] { "Productcategorypk" }, "IX_PRODUCTSER33221");

                    b.HasIndex(new[] { "Ficheproductpk" }, "U_PRODUCTSE_7S4GHG")
                        .IsUnique()
                        .HasFilter("[FICHEPRODUCTPK_] IS NOT NULL");

                    b.HasIndex(new[] { "Code" }, "U_PRODUCTSE_8NF190")
                        .IsUnique();

                    b.HasIndex(new[] { "Vendorincentivespk" }, "U_PRODUCTSE_BESJO2")
                        .IsUnique()
                        .HasFilter("[VENDORINCENTIVESPK_] IS NOT NULL");

                    b.HasIndex(new[] { "Identifier" }, "U_PRODUCTSE_TM01JK")
                        .IsUnique();

                    b.ToTable("PRODUCTSERVICE", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Receivedbill", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Acceptationcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCEPTATIONCODE_");

                    b.Property<string>("Accountcontractcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTCONTRACTCODE_");

                    b.Property<long?>("Accountcontractpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ACCOUNTCONTRACTPK_");

                    b.Property<bool?>("Accphysique")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ACCPHYSIQUE_");

                    b.Property<string>("Affecteduser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AFFECTEDUSER_");

                    b.Property<DateTime?>("Affectiondate")
                        .HasColumnType("DATE")
                        .HasColumnName("AFFECTIONDATE_");

                    b.Property<bool?>("Autoprocess")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("AUTOPROCESS_");

                    b.Property<string>("Avalrib")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AVALRIB_");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BANKCODE_");

                    b.Property<long?>("Bankpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("BANKPK_");

                    b.Property<bool?>("Bap")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("BAP_");

                    b.Property<string>("Beneficiaryname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BENEFICIARYNAME_");

                    b.Property<string>("Beneficiaryref")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BENEFICIARYREF_");

                    b.Property<string>("Beneficiaryrib")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BENEFICIARYRIB_");

                    b.Property<decimal?>("Billamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("BILLAMOUNT_");

                    b.Property<long?>("Billimagepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("BILLIMAGEPK_");

                    b.Property<long?>("Billimageversopk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("BILLIMAGEVERSOPK_");

                    b.Property<string>("Billreference")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BILLREFERENCE_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<long?>("Clearingpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CLEARINGPK_");

                    b.Property<string>("Codelabel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODELABEL_");

                    b.Property<string>("Codeordrepay")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODEORDREPAY_");

                    b.Property<DateTime>("Creationdatebill")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATIONDATEBILL_");

                    b.Property<string>("Creationlocation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CREATIONLOCATION_");

                    b.Property<string>("Currencycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CURRENCYCODE_");

                    b.Property<long>("Currencypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CURRENCYPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<DateTime?>("Datecompensationinitiale")
                        .HasColumnType("DATE")
                        .HasColumnName("DATECOMPENSATIONINITIALE_");

                    b.Property<DateTime?>("Dealingroomdate")
                        .HasColumnType("DATE")
                        .HasColumnName("DEALINGROOMDATE_");

                    b.Property<decimal?>("Dealingroomgrossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMGROSSAMOUNT_");

                    b.Property<decimal?>("Dealingroomnetamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMNETAMOUNT_");

                    b.Property<decimal?>("Dealingroomrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMRATE_");

                    b.Property<string>("Dealingroomreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEALINGROOMREFERENCE_");

                    b.Property<decimal?>("Dealingroomtotalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMTOTALCOMMISSION_");

                    b.Property<decimal?>("Dealingroomtotalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMTOTALVAT_");

                    b.Property<string>("Depositname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEPOSITNAME_");

                    b.Property<bool>("Draft")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("DRAFT_");

                    b.Property<string>("Draweereference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DRAWEEREFERENCE_");

                    b.Property<string>("Emettingunit")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMETTINGUNIT_");

                    b.Property<string>("Endoseravalcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ENDOSERAVALCODE_");

                    b.Property<string>("Eventtypecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EVENTTYPECODE_");

                    b.Property<long?>("Eventtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("EVENTTYPEPK_");

                    b.Property<string>("Exempttype")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EXEMPTTYPE_");

                    b.Property<string>("Extreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EXTREFERENCE_");

                    b.Property<DateTime>("Fallingduedate")
                        .HasColumnType("DATE")
                        .HasColumnName("FALLINGDUEDATE_");

                    b.Property<bool?>("Force")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FORCE_");

                    b.Property<string>("Freetext")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FREETEXT_");

                    b.Property<decimal?>("Fxgrossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXGROSSAMOUNT_");

                    b.Property<decimal?>("Fxnetamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXNETAMOUNT_");

                    b.Property<decimal?>("Fxrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXRATE_");

                    b.Property<decimal?>("Fxtotalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXTOTALCOMMISSION_");

                    b.Property<decimal?>("Fxtotalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXTOTALVAT_");

                    b.Property<decimal?>("Grossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNT_");

                    b.Property<bool?>("Hascomplementaryrecords")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("HASCOMPLEMENTARYRECORDS_");

                    b.Property<DateTime?>("Initialfallingduedate")
                        .HasColumnType("DATE")
                        .HasColumnName("INITIALFALLINGDUEDATE_");

                    b.Property<string>("Initialpayerrib")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("INITIALPAYERRIB_");

                    b.Property<string>("Instrumentcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("INSTRUMENTCODE_");

                    b.Property<decimal>("Interestamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("INTERESTAMOUNT_");

                    b.Property<bool?>("Isdeal")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISDEAL_");

                    b.Property<bool?>("Issuedinlocal")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISSUEDINLOCAL_");

                    b.Property<string>("Mandatorycodes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MANDATORYCODES_");

                    b.Property<bool?>("Manualclearing")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("MANUALCLEARING_");

                    b.Property<string>("Naturebenef")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NATUREBENEF_");

                    b.Property<bool?>("Negociateexchange")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("NEGOCIATEEXCHANGE_");

                    b.Property<decimal?>("Netamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("NETAMOUNT_");

                    b.Property<string>("Nrem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NREM_");

                    b.Property<string>("Ntrans")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NTRANS_");

                    b.Property<string>("Operationtypecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OPERATIONTYPECODE_");

                    b.Property<long?>("Operationtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OPERATIONTYPEPK_");

                    b.Property<string>("Papercode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PAPERCODE_");

                    b.Property<string>("Payername")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PAYERNAME_");

                    b.Property<string>("Payerref")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PAYERREF_");

                    b.Property<string>("Payerrib")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PAYERRIB_");

                    b.Property<decimal>("Protestfees")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("PROTESTFEES_");

                    b.Property<bool?>("Provisionrejectioncancelled")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PROVISIONREJECTIONCANCELLED_");

                    b.Property<long?>("Rcppk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("RCPPK_");

                    b.Property<string>("Receivedbilllcstatus")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("RECEIVEDBILLLCSTATUS_");

                    b.Property<DateTime?>("Receivedvaluedate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEIVEDVALUEDATE_");

                    b.Property<string>("Refcommercialpayer")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFCOMMERCIALPAYER_");

                    b.Property<string>("Reference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFERENCE_");

                    b.Property<string>("Referencerio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFERENCERIO_");

                    b.Property<string>("Referencettn")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFERENCETTN_");

                    b.Property<string>("Rejectcodereasons")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REJECTCODEREASONS_");

                    b.Property<DateTime?>("Rejectdate")
                        .HasColumnType("DATE")
                        .HasColumnName("REJECTDATE_");

                    b.Property<bool?>("Restournecommission")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("RESTOURNECOMMISSION_");

                    b.Property<string>("Reversalreason")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REVERSALREASON_");

                    b.Property<string>("Riskcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RISKCODE_");

                    b.Property<long?>("Signatureimagepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("SIGNATUREIMAGEPK_");

                    b.Property<string>("Situationbenef")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SITUATIONBENEF_");

                    b.Property<DateTime?>("Spotdate")
                        .HasColumnType("DATE")
                        .HasColumnName("SPOTDATE_");

                    b.Property<decimal?>("Totalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALCOMMISSION_");

                    b.Property<decimal?>("Totalstamp")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALSTAMP_");

                    b.Property<decimal?>("Totaltaf")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALTAF_");

                    b.Property<decimal?>("Totalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALVAT_");

                    b.Property<DateTime?>("Tradedate")
                        .HasColumnType("DATE")
                        .HasColumnName("TRADEDATE_");

                    b.Property<DateTime?>("Transitiondate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("TRANSITIONDATE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Unitcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UNITCODE_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<DateTime?>("Validationdate")
                        .HasColumnType("DATE")
                        .HasColumnName("VALIDATIONDATE_");

                    b.Property<string>("Validationprocessname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONPROCESSNAME_");

                    b.Property<string>("Validationstepname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONSTEPNAME_");

                    b.Property<string>("Validationuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONUSER_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.Property<bool?>("Vfcheck")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("VFCHECK_");

                    b.Property<bool?>("Withaval")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("WITHAVAL_");

                    b.Property<bool?>("Withoutimage")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("WITHOUTIMAGE_");

                    b.HasKey("Pk")
                        .HasName("P_RECEIVEDBILL");

                    b.HasIndex("Accountcontractpk");

                    b.HasIndex(new[] { "Unitcode", "Receivedbilllcstatus" }, "IDX_RBIL_UC_RBS");

                    b.HasIndex(new[] { "Receivedbilllcstatus" }, "IDX_RECBILL_LCSTATUS");

                    b.HasIndex(new[] { "Billreference", "Receivedbilllcstatus" }, "IDX_RECEIVEDBILL_BILLREF");

                    b.HasIndex(new[] { "Reference", "Tradedate" }, "INDX_RECEIVEDBILL_1");

                    b.ToTable("RECEIVEDBILL", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Receivedcheck", b =>
                {
                    b.Property<long>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Pk"), 1L, 1);

                    b.Property<string>("Accountcontractcode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTCONTRACTCODE_");

                    b.Property<long?>("Accountcontractpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ACCOUNTCONTRACTPK_");

                    b.Property<string>("Accountnature")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTNATURE_");

                    b.Property<string>("Affecteduser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AFFECTEDUSER_");

                    b.Property<DateTime?>("Affectiondate")
                        .HasColumnType("DATE")
                        .HasColumnName("AFFECTIONDATE_");

                    b.Property<DateTime?>("Anrdate")
                        .HasColumnType("DATE")
                        .HasColumnName("ANRDATE_");

                    b.Property<bool?>("Autoprocess")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("AUTOPROCESS_");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BANKCODE_");

                    b.Property<long?>("Bankpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("BANKPK_");

                    b.Property<string>("Beneficiaryaccnature")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("BENEFICIARYACCNATURE_");

                    b.Property<string>("Beneficiaryname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BENEFICIARYNAME_");

                    b.Property<string>("Beneficiaryrib")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("BENEFICIARYRIB_");

                    b.Property<string>("Benefsituation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BENEFSITUATION_");

                    b.Property<string>("Branchdestcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BRANCHDESTCODE_");

                    b.Property<string>("Branchremcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BRANCHREMCODE_");

                    b.Property<bool?>("Cannegoce")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("CANNEGOCE_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<decimal?>("Certificationamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("CERTIFICATIONAMOUNT_");

                    b.Property<long?>("Checkimagepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CHECKIMAGEPK_");

                    b.Property<long?>("Checkimageversopk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CHECKIMAGEVERSOPK_");

                    b.Property<string>("Chequecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CHEQUECODE_");

                    b.Property<long?>("Chequepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CHEQUEPK_");

                    b.Property<string>("Clearingnatremettant")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CLEARINGNATREMETTANT_");

                    b.Property<long?>("Clearingpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CLEARINGPK_");

                    b.Property<DateTime?>("Cnpdate")
                        .HasColumnType("DATE")
                        .HasColumnName("CNPDATE_");

                    b.Property<bool?>("Cnpeffacer")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("CNPEFFACER");

                    b.Property<string>("Codelabel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODELABEL_");

                    b.Property<string>("Creationlocation")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CREATIONLOCATION_");

                    b.Property<string>("Currencycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CURRENCYCODE_");

                    b.Property<long>("Currencypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CURRENCYPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<DateTime?>("Date90eme")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE90EME_");

                    b.Property<DateTime?>("Dealingroomdate")
                        .HasColumnType("DATE")
                        .HasColumnName("DEALINGROOMDATE_");

                    b.Property<decimal?>("Dealingroomgrossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMGROSSAMOUNT_");

                    b.Property<decimal?>("Dealingroomnetamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMNETAMOUNT_");

                    b.Property<decimal?>("Dealingroomrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMRATE_");

                    b.Property<string>("Dealingroomreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEALINGROOMREFERENCE_");

                    b.Property<decimal?>("Dealingroomtotalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMTOTALCOMMISSION_");

                    b.Property<decimal?>("Dealingroomtotalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMTOTALVAT_");

                    b.Property<string>("Depositname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEPOSITNAME_");

                    b.Property<string>("Devposacc")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEVPOSACC_");

                    b.Property<bool>("Draft")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("DRAFT_");

                    b.Property<string>("Draweerib")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("DRAWEERIB_");

                    b.Property<string>("Eventtypecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EVENTTYPECODE_");

                    b.Property<long?>("Eventtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("EVENTTYPEPK_");

                    b.Property<string>("Exempttype")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EXEMPTTYPE_");

                    b.Property<string>("Extreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EXTREFERENCE_");

                    b.Property<bool?>("Force")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FORCE_");

                    b.Property<string>("Freezone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FREEZONE_");

                    b.Property<decimal?>("Fxgrossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXGROSSAMOUNT_");

                    b.Property<decimal?>("Fxnetamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXNETAMOUNT_");

                    b.Property<decimal?>("Fxrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXRATE_");

                    b.Property<decimal?>("Fxtotalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXTOTALCOMMISSION_");

                    b.Property<decimal?>("Fxtotalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXTOTALVAT_");

                    b.Property<bool?>("Generatecnp")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GENERATECNP_");

                    b.Property<bool?>("Generatepapillion")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GENERATEPAPILLION_");

                    b.Property<bool?>("Generatepreavis")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("GENERATEPREAVIS_");

                    b.Property<decimal?>("Grossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNT_");

                    b.Property<bool?>("Hasexploit")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("HASEXPLOIT_");

                    b.Property<string>("Huissiercode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("HUISSIERCODE_");

                    b.Property<long?>("Huissierpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("HUISSIERPK_");

                    b.Property<string>("Iddocument")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IDDOCUMENT_");

                    b.Property<bool?>("Immediatereject")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("IMMEDIATEREJECT_");

                    b.Property<string>("Internalexternal")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("INTERNALEXTERNAL_");

                    b.Property<bool>("Iscertified")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISCERTIFIED_");

                    b.Property<bool?>("Isdeal")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISDEAL_");

                    b.Property<bool?>("Isforeignbank")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISFOREIGNBANK_");

                    b.Property<bool?>("Isproccureurdoc")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISPROCCUREURDOC_");

                    b.Property<bool?>("Isreglemente")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISREGLEMENTE_");

                    b.Property<DateTime>("Issuedate")
                        .HasColumnType("DATE")
                        .HasColumnName("ISSUEDATE_");

                    b.Property<bool>("Issuedinlocal")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISSUEDINLOCAL_");

                    b.Property<string>("Mandatorycodes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MANDATORYCODES_");

                    b.Property<bool>("Manualclearing")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("MANUALCLEARING_");

                    b.Property<decimal?>("Migreservedamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("MIGRESERVEDAMOUNT_");

                    b.Property<string>("Natremettant")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NATREMETTANT_");

                    b.Property<string>("Natremettantvrai")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NATREMETTANTVRAI_");

                    b.Property<string>("Naturecomptebenef")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("NATURECOMPTEBENEF_");

                    b.Property<bool?>("Negociateexchange")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("NEGOCIATEEXCHANGE_");

                    b.Property<decimal?>("Netamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("NETAMOUNT_");

                    b.Property<string>("Nrem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NREM_");

                    b.Property<string>("Ntrans")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NTRANS_");

                    b.Property<string>("Number")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NUMBER_");

                    b.Property<string>("Numcnp")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUMCNP_");

                    b.Property<string>("Numtranche")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUMTRANCHE_");

                    b.Property<DateTime?>("Oldanrdate")
                        .HasColumnType("DATE")
                        .HasColumnName("OLDANRDATE_");

                    b.Property<long?>("Oldcleringpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OLDCLERINGPK_");

                    b.Property<DateTime?>("Olddate90eme")
                        .HasColumnType("DATE")
                        .HasColumnName("OLDDATE90EME_");

                    b.Property<DateTime?>("Olddatecnp")
                        .HasColumnType("DATE")
                        .HasColumnName("OLDDATECNP_");

                    b.Property<DateTime?>("Olddatepreavis")
                        .HasColumnType("DATE")
                        .HasColumnName("OLDDATEPREAVIS_");

                    b.Property<DateTime?>("Oldfinpremierdelai")
                        .HasColumnType("DATE")
                        .HasColumnName("OLDFINPREMIERDELAI_");

                    b.Property<string>("Oldnumcnp")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OLDNUMCNP");

                    b.Property<string>("Oldnumppreavis")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OLDNUMPPREAVIS");

                    b.Property<string>("Operationtypecode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OPERATIONTYPECODE_");

                    b.Property<long>("Operationtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OPERATIONTYPEPK_");

                    b.Property<string>("Orgnisationunithuissiercode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ORGNISATIONUNITHUISSIERCODE_");

                    b.Property<long?>("Orgnisationunithuissierpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ORGNISATIONUNITHUISSIERPK_");

                    b.Property<string>("Particiantremcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PARTICIANTREMCODE_");

                    b.Property<DateTime?>("Paymentdate")
                        .HasColumnType("DATE")
                        .HasColumnName("PAYMENTDATE_");

                    b.Property<string>("Paymentdocnum")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PAYMENTDOCNUM_");

                    b.Property<bool?>("Paymentpartiel")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PAYMENTPARTIEL_");

                    b.Property<DateTime?>("Preavisdate")
                        .HasColumnType("DATE")
                        .HasColumnName("PREAVISDATE_");

                    b.Property<bool?>("Preaviseffacer")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PREAVISEFFACER");

                    b.Property<DateTime?>("Presdate")
                        .HasColumnType("DATE")
                        .HasColumnName("PRESDATE_");

                    b.Property<bool?>("Proccureurdocgenerated")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PROCCUREURDOCGENERATED_");

                    b.Property<decimal?>("Provisionamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("PROVISIONAMOUNT_");

                    b.Property<DateTime?>("Provisiondate")
                        .HasColumnType("DATE")
                        .HasColumnName("PROVISIONDATE_");

                    b.Property<bool?>("Provisionrejectioncancelled")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("PROVISIONREJECTIONCANCELLED_");

                    b.Property<string>("Receivedchecklcstatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("RECEIVEDCHECKLCSTATUS_");

                    b.Property<DateTime?>("Receivedvaluedate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEIVEDVALUEDATE_");

                    b.Property<string>("Reference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFERENCE_");

                    b.Property<string>("Referencerio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFERENCERIO_");

                    b.Property<string>("Refpubkey")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFPUBKEY_");

                    b.Property<decimal?>("Regulamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("REGULAMOUNT_");

                    b.Property<decimal?>("Regulinterestamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("REGULINTERESTAMOUNT_");

                    b.Property<string>("Rejectcodereasons")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REJECTCODEREASONS_");

                    b.Property<DateTime?>("Rejectdate")
                        .HasColumnType("DATE")
                        .HasColumnName("REJECTDATE_");

                    b.Property<string>("Relatedservicecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RELATEDSERVICECODE_");

                    b.Property<long?>("Relatedservicepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("RELATEDSERVICEPK_");

                    b.Property<decimal?>("Requestedamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("REQUESTEDAMOUNT_");

                    b.Property<bool?>("Restournecommission")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("RESTOURNECOMMISSION_");

                    b.Property<string>("Reversalreason")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REVERSALREASON_");

                    b.Property<string>("Signature")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SIGNATURE_");

                    b.Property<long?>("Signatureimagepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("SIGNATUREIMAGEPK_");

                    b.Property<DateTime?>("Spotdate")
                        .HasColumnType("DATE")
                        .HasColumnName("SPOTDATE_");

                    b.Property<decimal?>("Totalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALCOMMISSION_");

                    b.Property<decimal?>("Totalregulamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALREGULAMOUNT_");

                    b.Property<decimal?>("Totalstamp")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALSTAMP_");

                    b.Property<decimal?>("Totaltaf")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALTAF_");

                    b.Property<decimal?>("Totalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALVAT_");

                    b.Property<DateTime?>("Tradedate")
                        .HasColumnType("DATE")
                        .HasColumnName("TRADEDATE_");

                    b.Property<DateTime?>("Transitiondate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("TRANSITIONDATE_");

                    b.Property<DateTime?>("Udate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Unitcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UNITCODE_");

                    b.Property<string>("Uuser")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<DateTime?>("Validationdate")
                        .HasColumnType("DATE")
                        .HasColumnName("VALIDATIONDATE_");

                    b.Property<string>("Validationprocessname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONPROCESSNAME_");

                    b.Property<string>("Validationstepname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONSTEPNAME_");

                    b.Property<string>("Validationuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONUSER_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.Property<bool?>("Vfcheck")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("VFCHECK_");

                    b.Property<bool?>("Withoutimage")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("WITHOUTIMAGE_");

                    b.HasKey("Pk")
                        .HasName("P_RECEIVEDCHECK");

                    b.HasIndex(new[] { "Draweerib", "Number" }, "DRAWEERIB_NUMBER_20190515");

                    b.HasIndex(new[] { "Receivedchecklcstatus", "Draft", "Draweerib" }, "IDX$$_2DE510001");

                    b.HasIndex(new[] { "Reference" }, "IDX$$_585A90002");

                    b.HasIndex(new[] { "Pk", "Unitcode", "Draft" }, "IDX$$_DD2A0001");

                    b.HasIndex(new[] { "Unitcode", "Draft" }, "IDX_RCHK_26022020");

                    b.HasIndex(new[] { "Chequepk", "Pk" }, "IDX_RECCHQ_CHPK_PK");

                    b.HasIndex(new[] { "Accountcontractcode" }, "IDX_RECEIVEDCHECK_ACCOUNTCODE");

                    b.HasIndex(new[] { "Unitcode", "Natremettant", "Chequepk" }, "IDX_RECVCHQ");

                    b.HasIndex(new[] { "Chequecode" }, "INDX_RECVCHQ_31072018");

                    b.HasIndex(new[] { "Accountcontractpk", "Currencypk", "Operationtypepk" }, "IX_RECEIVEDCHECK_ACC");

                    b.HasIndex(new[] { "Receivedchecklcstatus", "Eventtypecode", "Tradedate", "Hasexploit", "Rejectdate" }, "RECEIVEDCHECK_IDX_13112017");

                    b.HasIndex(new[] { "Number", "Accountcontractpk" }, "RECEIVEDCHECK_IDX_94A60001");

                    b.HasIndex(new[] { "Draft", "Tradedate", "Accountcontractpk" }, "RECEIVEDCHECK_IDX_95590002");

                    b.HasIndex(new[] { "Unitcode", "Receivedchecklcstatus", "Tradedate" }, "RECEIVEDCHECK_IDX_95DD0002");

                    b.HasIndex(new[] { "Reference", "Tradedate" }, "U_RECEIVEDCHECK");

                    b.HasIndex(new[] { "Chequepk" }, "U_RECEIVEDCHECK_28112019");

                    b.ToTable("RECEIVEDCHECK", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Recvplv", b =>
                {
                    b.Property<long>("Pk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PK_");

                    b.Property<string>("Accountcontractcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTCONTRACTCODE_");

                    b.Property<long?>("Accountcontractpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("ACCOUNTCONTRACTPK_");

                    b.Property<string>("Accountnumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTNUMBER_");

                    b.Property<string>("Accountrib")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACCOUNTRIB_");

                    b.Property<string>("Affecteduser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AFFECTEDUSER_");

                    b.Property<DateTime?>("Affectiondate")
                        .HasColumnType("DATE")
                        .HasColumnName("AFFECTIONDATE_");

                    b.Property<bool?>("Autoprocess")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("AUTOPROCESS_");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BANKCODE_");

                    b.Property<long?>("Bankpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("BANKPK_");

                    b.Property<string>("Beneficiaryname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BENEFICIARYNAME_");

                    b.Property<string>("Beneficiaryrib")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BENEFICIARYRIB_");

                    b.Property<DateTime?>("Cdate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CDATE_");

                    b.Property<DateTime?>("Clearingdate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLEARINGDATE_");

                    b.Property<string>("Clearinglock")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CLEARINGLOCK_");

                    b.Property<long?>("Clearingpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CLEARINGPK_");

                    b.Property<string>("Clientidentifier")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CLIENTIDENTIFIER_");

                    b.Property<string>("Codeemetteur")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODEEMETTEUR_");

                    b.Property<string>("Codelabel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODELABEL_");

                    b.Property<long?>("Compensecentralpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("COMPENSECENTRALPK_");

                    b.Property<string>("Currencycode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CURRENCYCODE_");

                    b.Property<long>("Currencypk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("CURRENCYPK_");

                    b.Property<string>("Cuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUSER_");

                    b.Property<DateTime?>("Dealingroomdate")
                        .HasColumnType("DATE")
                        .HasColumnName("DEALINGROOMDATE_");

                    b.Property<decimal?>("Dealingroomgrossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMGROSSAMOUNT_");

                    b.Property<decimal?>("Dealingroomnetamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMNETAMOUNT_");

                    b.Property<decimal?>("Dealingroomrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMRATE_");

                    b.Property<string>("Dealingroomreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEALINGROOMREFERENCE_");

                    b.Property<decimal?>("Dealingroomtotalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMTOTALCOMMISSION_");

                    b.Property<decimal?>("Dealingroomtotalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("DEALINGROOMTOTALVAT_");

                    b.Property<string>("Depositname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEPOSITNAME_");

                    b.Property<bool>("Draft")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("DRAFT_");

                    b.Property<string>("Eventtypecode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EVENTTYPECODE_");

                    b.Property<long?>("Eventtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("EVENTTYPEPK_");

                    b.Property<string>("Exempttype")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EXEMPTTYPE_");

                    b.Property<string>("Extreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EXTREFERENCE_");

                    b.Property<bool?>("Force")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FORCE_");

                    b.Property<string>("Freetext")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FREETEXT_");

                    b.Property<bool?>("Fromcentralservice")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FROMCENTRALSERVICE_");

                    b.Property<bool?>("Fromclearing")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FROMCLEARING_");

                    b.Property<bool?>("Fromcompense")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FROMCOMPENSE_");

                    b.Property<bool?>("Fromsbe")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FROMSBE_");

                    b.Property<decimal?>("Fxgrossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXGROSSAMOUNT_");

                    b.Property<decimal?>("Fxnetamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXNETAMOUNT_");

                    b.Property<decimal?>("Fxrate")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXRATE_");

                    b.Property<decimal?>("Fxtotalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXTOTALCOMMISSION_");

                    b.Property<decimal?>("Fxtotalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("FXTOTALVAT_");

                    b.Property<decimal?>("Grossamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("GROSSAMOUNT_");

                    b.Property<bool?>("Isdeal")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISDEAL_");

                    b.Property<bool?>("Locked")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("LOCKED_");

                    b.Property<string>("Mandatorycodes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MANDATORYCODES_");

                    b.Property<DateTime?>("Maturitydate")
                        .HasColumnType("DATE")
                        .HasColumnName("MATURITYDATE_");

                    b.Property<bool?>("Negociateexchange")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("NEGOCIATEEXCHANGE_");

                    b.Property<decimal?>("Netamount")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("NETAMOUNT_");

                    b.Property<string>("Nrem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NREM_");

                    b.Property<string>("Ntrans")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NTRANS_");

                    b.Property<string>("Numtranche")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUMTRANCHE_");

                    b.Property<string>("Objet")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OBJET_");

                    b.Property<string>("Operationtypecode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OPERATIONTYPECODE_");

                    b.Property<long>("Operationtypepk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OPERATIONTYPEPK_");

                    b.Property<string>("Opetypeintracible")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OPETYPEINTRACIBLE_");

                    b.Property<string>("Opetypeintrasource")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OPETYPEINTRASOURCE_");

                    b.Property<string>("Paymentdocnum")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PAYMENTDOCNUM_");

                    b.Property<string>("Paymentdocreference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PAYMENTDOCREFERENCE_");

                    b.Property<string>("Plvauthcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PLVAUTHCODE_");

                    b.Property<long?>("Plvauthpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("PLVAUTHPK_");

                    b.Property<long?>("Rcppk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("RCPPK_");

                    b.Property<DateTime?>("Receivedvaluedate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEIVEDVALUEDATE_");

                    b.Property<DateTime>("Receptiondate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEPTIONDATE_");

                    b.Property<string>("Reference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFERENCE_");

                    b.Property<string>("Referencerio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REFERENCERIO_");

                    b.Property<string>("Rejectcodereasons")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REJECTCODEREASONS_");

                    b.Property<DateTime?>("Rejectdate")
                        .HasColumnType("DATE")
                        .HasColumnName("REJECTDATE_");

                    b.Property<string>("Relatedprelevementpk")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RELATEDPRELEVEMENTPK_");

                    b.Property<bool?>("Restournecommission")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("RESTOURNECOMMISSION_");

                    b.Property<string>("Reversalreason")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REVERSALREASON_");

                    b.Property<DateTime?>("Spotdate")
                        .HasColumnType("DATE")
                        .HasColumnName("SPOTDATE_");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("STATUS_");

                    b.Property<decimal?>("Totalcommission")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALCOMMISSION_");

                    b.Property<decimal?>("Totalstamp")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALSTAMP_");

                    b.Property<decimal?>("Totaltaf")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALTAF_");

                    b.Property<decimal?>("Totalvat")
                        .HasColumnType("NUMBER(19,4)")
                        .HasColumnName("TOTALVAT_");

                    b.Property<DateTime?>("Tradedate")
                        .HasColumnType("DATE")
                        .HasColumnName("TRADEDATE_");

                    b.Property<DateTime?>("Transitiondate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("TRANSITIONDATE_");

                    b.Property<DateTime?>("Udate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("UDATE_");

                    b.Property<string>("Unitcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UNITCODE_");

                    b.Property<string>("Uuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UUSER_");

                    b.Property<bool?>("Validatecomptereg")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("VALIDATECOMPTEREG_");

                    b.Property<DateTime?>("Validationdate")
                        .HasColumnType("DATE")
                        .HasColumnName("VALIDATIONDATE_");

                    b.Property<string>("Validationprocessname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONPROCESSNAME_");

                    b.Property<long?>("Validationspk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("VALIDATIONSPK_");

                    b.Property<string>("Validationstepname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONSTEPNAME_");

                    b.Property<string>("Validationuser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALIDATIONUSER_");

                    b.Property<int?>("Versionnum")
                        .HasPrecision(10)
                        .HasColumnType("int")
                        .HasColumnName("VERSIONNUM_");

                    b.HasKey("Pk")
                        .HasName("P_RECVPLV");

                    b.HasIndex(new[] { "Accountcontractpk" }, "IDX$$_2DE500001");

                    b.HasIndex(new[] { "Unitcode", "Status", "Fromcentralservice" }, "IDX$$_B0340001");

                    b.HasIndex(new[] { "Status", "Tradedate", "Accountcontractpk" }, "IDX_20210131");

                    b.HasIndex(new[] { "Status", "Fromcentralservice", "Locked", "Beneficiaryrib", "Draft", "Tradedate" }, "IDX_RECVPLV_20201210");

                    b.HasIndex(new[] { "Clearingpk" }, "IDX_RECVPLV_CLEARPK");

                    b.HasIndex(new[] { "Opetypeintrasource" }, "IDX_RECVPLV_OPETYP");

                    b.HasIndex(new[] { "Plvauthpk" }, "IDX_RECVPLV_PLVAUTHPK_");

                    b.HasIndex(new[] { "Rcppk" }, "IDX_RECVPLV_RCPPK");

                    b.HasIndex(new[] { "Reference" }, "IDX_RECVPLV_REF_20190422");

                    b.HasIndex(new[] { "Relatedprelevementpk" }, "INDEX_RELATEDPRELEVEMENTPK");

                    b.HasIndex(new[] { "Reference", "Tradedate" }, "U_RECVPLVREFCJ3TYT")
                        .IsUnique()
                        .HasFilter("[REFERENCE_] IS NOT NULL AND [TRADEDATE_] IS NOT NULL");

                    b.HasIndex(new[] { "Validationspk" }, "U_RECVPLVVAL88THVI")
                        .IsUnique()
                        .HasFilter("[VALIDATIONSPK_] IS NOT NULL");

                    b.ToTable("RECVPLV", (string)null);
                });

            modelBuilder.Entity("Nternalaccount", b =>
                {
                    b.Property<long>("Internalaccountspk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("INTERNALACCOUNTSPK");

                    b.Property<long>("Ownerpk")
                        .HasPrecision(19)
                        .HasColumnType("bigint")
                        .HasColumnName("OWNERPK");

                    b.HasKey("Internalaccountspk", "Ownerpk")
                        .HasName("P_NTERNALACCOUNTS");

                    b.HasIndex(new[] { "Internalaccountspk" }, "BAFIINDEX12347");

                    b.HasIndex(new[] { "Ownerpk" }, "BAFIV2_INDEX9ZZ78SSHHSSZZ99");

                    b.ToTable("NTERNALACCOUNTS", (string)null);
                });

            modelBuilder.Entity("AccountMicroService.Model.Accmovement", b =>
                {
                    b.HasOne("AccountMicroService.Model.Accmovement", "ReversedpkNavigation")
                        .WithMany("InverseReversedpkNavigation")
                        .HasForeignKey("Reversedpk")
                        .HasConstraintName("F_MENTREVEVWT12Q");

                    b.Navigation("ReversedpkNavigation");
                });

            modelBuilder.Entity("AccountMicroService.Model.Accountbalance", b =>
                {
                    b.HasOne("AccountMicroService.Model.Accountcontract", "AccountpkNavigation")
                        .WithMany("Accountbalances")
                        .HasForeignKey("Accountpk")
                        .IsRequired()
                        .HasConstraintName("F_ANCEACCOSZH6G6");

                    b.Navigation("AccountpkNavigation");
                });

            modelBuilder.Entity("AccountMicroService.Model.Accountcontract", b =>
                {
                    b.HasOne("AccountMicroService.Model.Account", "AccountpkNavigation")
                        .WithOne("Accountcontract")
                        .HasForeignKey("AccountMicroService.Model.Accountcontract", "Accountpk")
                        .HasConstraintName("F_RACTACCO_3XFOQY");

                    b.HasOne("AccountMicroService.Model.Accountcontract", "ComissionaccountpkNavigation")
                        .WithMany("InverseComissionaccountpkNavigation")
                        .HasForeignKey("Comissionaccountpk")
                        .HasConstraintName("F_RACTCOMII12D20");

                    b.HasOne("AccountMicroService.Model.Accountcontract", "LinckedaccountpkNavigation")
                        .WithMany("InverseLinckedaccountpkNavigation")
                        .HasForeignKey("Linckedaccountpk")
                        .HasConstraintName("F_RACTLINCXV9LCG");

                    b.HasOne("AccountMicroService.Model.Accountcontract", "PendingaccountpkNavigation")
                        .WithMany("InversePendingaccountpkNavigation")
                        .HasForeignKey("Pendingaccountpk")
                        .HasConstraintName("F_RACTPENDHJD0Y7");

                    b.HasOne("AccountMicroService.Model.Accountcontract", "TechnicalaccountpkNavigation")
                        .WithMany("InverseTechnicalaccountpkNavigation")
                        .HasForeignKey("Technicalaccountpk")
                        .HasConstraintName("F_RACTTECHVVE4UT");

                    b.Navigation("AccountpkNavigation");

                    b.Navigation("ComissionaccountpkNavigation");

                    b.Navigation("LinckedaccountpkNavigation");

                    b.Navigation("PendingaccountpkNavigation");

                    b.Navigation("TechnicalaccountpkNavigation");
                });

            modelBuilder.Entity("AccountMicroService.Model.Financialo", b =>
                {
                    b.HasOne("AccountMicroService.Model.Financialo", "ReversedfinancialopepkNavigation")
                        .WithOne("InverseReversedfinancialopepkNavigation")
                        .HasForeignKey("AccountMicroService.Model.Financialo", "Reversedfinancialopepk")
                        .HasConstraintName("F_IALOREVE_Y9TGF");

                    b.Navigation("ReversedfinancialopepkNavigation");
                });

            modelBuilder.Entity("AccountMicroService.Model.Receivedbill", b =>
                {
                    b.HasOne("AccountMicroService.Model.Accountcontract", "AccountcontractpkNavigation")
                        .WithMany("Receivedbills")
                        .HasForeignKey("Accountcontractpk")
                        .HasConstraintName("F_BILLACCOXJQF8T");

                    b.Navigation("AccountcontractpkNavigation");
                });

            modelBuilder.Entity("AccountMicroService.Model.Recvplv", b =>
                {
                    b.HasOne("AccountMicroService.Model.Accountcontract", "AccountcontractpkNavigation")
                        .WithMany("Recvplvs")
                        .HasForeignKey("Accountcontractpk")
                        .HasConstraintName("F_VPLVACCO_OQ83UV");

                    b.Navigation("AccountcontractpkNavigation");
                });

            modelBuilder.Entity("Nternalaccount", b =>
                {
                    b.HasOne("AccountMicroService.Model.Account", null)
                        .WithMany()
                        .HasForeignKey("Internalaccountspk")
                        .IsRequired()
                        .HasConstraintName("F_UNTSINTE_HEN1SM");

                    b.HasOne("AccountMicroService.Model.Entity", null)
                        .WithMany()
                        .HasForeignKey("Ownerpk")
                        .IsRequired()
                        .HasConstraintName("F_UNTSOWNEVULHFM");
                });

            modelBuilder.Entity("AccountMicroService.Model.Accmovement", b =>
                {
                    b.Navigation("InverseReversedpkNavigation");
                });

            modelBuilder.Entity("AccountMicroService.Model.Account", b =>
                {
                    b.Navigation("Accountcontract");
                });

            modelBuilder.Entity("AccountMicroService.Model.Accountcontract", b =>
                {
                    b.Navigation("Accountbalances");

                    b.Navigation("InverseComissionaccountpkNavigation");

                    b.Navigation("InverseLinckedaccountpkNavigation");

                    b.Navigation("InversePendingaccountpkNavigation");

                    b.Navigation("InverseTechnicalaccountpkNavigation");

                    b.Navigation("Receivedbills");

                    b.Navigation("Recvplvs");
                });

            modelBuilder.Entity("AccountMicroService.Model.Financialo", b =>
                {
                    b.Navigation("InverseReversedfinancialopepkNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
